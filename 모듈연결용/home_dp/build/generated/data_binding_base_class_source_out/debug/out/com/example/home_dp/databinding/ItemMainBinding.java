// Generated by view binder compiler. Do not edit!
package com.example.home_dp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.home_dp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView dateText;

  @NonNull
  public final LinearLayout itemRoot;

  @NonNull
  public final ImageView leftdatesign;

  @NonNull
  public final ImageView menuPhotoImg;

  @NonNull
  public final TextView menuText;

  private ItemMainBinding(@NonNull LinearLayout rootView, @NonNull TextView dateText,
      @NonNull LinearLayout itemRoot, @NonNull ImageView leftdatesign,
      @NonNull ImageView menuPhotoImg, @NonNull TextView menuText) {
    this.rootView = rootView;
    this.dateText = dateText;
    this.itemRoot = itemRoot;
    this.leftdatesign = leftdatesign;
    this.menuPhotoImg = menuPhotoImg;
    this.menuText = menuText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dateText;
      TextView dateText = ViewBindings.findChildViewById(rootView, id);
      if (dateText == null) {
        break missingId;
      }

      LinearLayout itemRoot = (LinearLayout) rootView;

      id = R.id.leftdatesign;
      ImageView leftdatesign = ViewBindings.findChildViewById(rootView, id);
      if (leftdatesign == null) {
        break missingId;
      }

      id = R.id.menuPhotoImg;
      ImageView menuPhotoImg = ViewBindings.findChildViewById(rootView, id);
      if (menuPhotoImg == null) {
        break missingId;
      }

      id = R.id.menuText;
      TextView menuText = ViewBindings.findChildViewById(rootView, id);
      if (menuText == null) {
        break missingId;
      }

      return new ItemMainBinding((LinearLayout) rootView, dateText, itemRoot, leftdatesign,
          menuPhotoImg, menuText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
