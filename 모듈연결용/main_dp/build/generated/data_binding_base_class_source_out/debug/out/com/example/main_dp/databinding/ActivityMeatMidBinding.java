// Generated by view binder compiler. Do not edit!
package com.example.main_dp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.main_dp.R;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMeatMidBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button ChickButton;

  @NonNull
  public final Button CowButton;

  @NonNull
  public final Button MeatetcButton;

  @NonNull
  public final Button PigButton;

  @NonNull
  public final ExtendedFloatingActionButton TorefButton;

  @NonNull
  public final LinearLayout meatMidview;

  private ActivityMeatMidBinding(@NonNull CoordinatorLayout rootView, @NonNull Button ChickButton,
      @NonNull Button CowButton, @NonNull Button MeatetcButton, @NonNull Button PigButton,
      @NonNull ExtendedFloatingActionButton TorefButton, @NonNull LinearLayout meatMidview) {
    this.rootView = rootView;
    this.ChickButton = ChickButton;
    this.CowButton = CowButton;
    this.MeatetcButton = MeatetcButton;
    this.PigButton = PigButton;
    this.TorefButton = TorefButton;
    this.meatMidview = meatMidview;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMeatMidBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMeatMidBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_meat_mid, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMeatMidBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ChickButton;
      Button ChickButton = ViewBindings.findChildViewById(rootView, id);
      if (ChickButton == null) {
        break missingId;
      }

      id = R.id.CowButton;
      Button CowButton = ViewBindings.findChildViewById(rootView, id);
      if (CowButton == null) {
        break missingId;
      }

      id = R.id.MeatetcButton;
      Button MeatetcButton = ViewBindings.findChildViewById(rootView, id);
      if (MeatetcButton == null) {
        break missingId;
      }

      id = R.id.PigButton;
      Button PigButton = ViewBindings.findChildViewById(rootView, id);
      if (PigButton == null) {
        break missingId;
      }

      id = R.id.TorefButton;
      ExtendedFloatingActionButton TorefButton = ViewBindings.findChildViewById(rootView, id);
      if (TorefButton == null) {
        break missingId;
      }

      id = R.id.meatMidview;
      LinearLayout meatMidview = ViewBindings.findChildViewById(rootView, id);
      if (meatMidview == null) {
        break missingId;
      }

      return new ActivityMeatMidBinding((CoordinatorLayout) rootView, ChickButton, CowButton,
          MeatetcButton, PigButton, TorefButton, meatMidview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
